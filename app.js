AOS.init({ duration: 2e3, once: !0 }); let preLoaderScreen = document.querySelector(".bgScreen"); const preLoader = () => { preLoaderScreen.style.display = "none" }; document.addEventListener(onload, void (preLoaderScreen.style.display = "none")); const swiper = new Swiper(".swiper-container", { autoplay: { delay: 1e3 }, breakpoints: { 320: { slidesPerView: 2, spaceBetween: 20 }, 480: { slidesPerView: 3, spaceBetween: 30 }, 640: { loop: !0, slidesPerView: 6, spaceBetween: 40 }, pagination: { el: ".swiper-pagination", clickable: !0 }, 768: { slidesPerView: 5 } } }); window.addEventListener("scroll", function () { let e = window.scrollY > 0; document.querySelector(".topBtn").classList.toggle("animateTopBtn", e), document.querySelector(".head").classList.toggle("navReal", e) }); let screenAt768 = matchMedia("(max-width:768px)"), ulNavBar = document.querySelector(".navBar"), barButton = document.querySelector(".fa-bars"), crossButton = document.querySelector(".fa-times"), manipulation = () => { ulNavBar.style.display = "initial", barButton.style.display = "none", crossButton.style.display = "initial" }; manipulationNone = (() => { ulNavBar.style.display = "none", barButton.style.display = "initial", crossButton.style.display = "none" }); const respNavBar = () => { "none" == getComputedStyle(ulNavBar).getPropertyValue("display") ? (manipulation(), setTimeout(() => { ulNavBar.addEventListener("click", manipulationNone) }, 500)) : manipulationNone() }; let card = document.querySelector(".featureCards"); window.addEventListener("scroll", function () { window.scrollY, card.scrollY }), function (e, t) { "function" == typeof define && define.amd ? define(t) : "object" == typeof exports ? module.exports = t(require, exports, module) : e.CountUp = t() }(this, function (e, t, n) { return function (e, t, n, a, i, o) { for (var r = 0, s = ["webkit", "moz", "ms", "o"], l = 0; l < s.length && !window.requestAnimationFrame; ++l)window.requestAnimationFrame = window[s[l] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[s[l] + "CancelAnimationFrame"] || window[s[l] + "CancelRequestAnimationFrame"]; window.requestAnimationFrame || (window.requestAnimationFrame = function (e, t) { var n = (new Date).getTime(), a = Math.max(0, 16 - (n - r)), i = window.setTimeout(function () { e(n + a) }, a); return r = n + a, i }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function (e) { clearTimeout(e) }); var u = this; for (var d in u.options = { useEasing: !0, useGrouping: !0, separator: ",", decimal: ".", easingFn: null, formattingFn: null }, o) o.hasOwnProperty(d) && (u.options[d] = o[d]); "" === u.options.separator && (u.options.useGrouping = !1), u.options.prefix || (u.options.prefix = ""), u.options.suffix || (u.options.suffix = ""), u.d = "string" == typeof e ? document.getElementById(e) : e, u.startVal = Number(t), u.endVal = Number(n), u.countDown = u.startVal > u.endVal, u.frameVal = u.startVal, u.decimals = Math.max(0, a || 0), u.dec = Math.pow(10, u.decimals), u.duration = 1e3 * Number(i) || 2e3, u.formatNumber = function (e) { var t, n, a, i; if (e = e.toFixed(u.decimals), n = (t = (e += "").split("."))[0], a = t.length > 1 ? u.options.decimal + t[1] : "", i = /(\d+)(\d{3})/, u.options.useGrouping) for (; i.test(n);)n = n.replace(i, "$1" + u.options.separator + "$2"); return u.options.prefix + n + a + u.options.suffix }, u.easeOutExpo = function (e, t, n, a) { return n * (1 - Math.pow(2, -10 * e / a)) * 1024 / 1023 + t }, u.easingFn = u.options.easingFn ? u.options.easingFn : u.easeOutExpo, u.formattingFn = u.options.formattingFn ? u.options.formattingFn : u.formatNumber, u.version = function () { return "1.7.1" }, u.printValue = function (e) { var t = u.formattingFn(e); "INPUT" === u.d.tagName ? this.d.value = t : "text" === u.d.tagName || "tspan" === u.d.tagName ? this.d.textContent = t : this.d.innerHTML = t }, u.count = function (e) { u.startTime || (u.startTime = e), u.timestamp = e; var t = e - u.startTime; u.remaining = u.duration - t, u.options.useEasing ? u.countDown ? u.frameVal = u.startVal - u.easingFn(t, 0, u.startVal - u.endVal, u.duration) : u.frameVal = u.easingFn(t, u.startVal, u.endVal - u.startVal, u.duration) : u.countDown ? u.frameVal = u.startVal - (u.startVal - u.endVal) * (t / u.duration) : u.frameVal = u.startVal + (u.endVal - u.startVal) * (t / u.duration), u.countDown ? u.frameVal = u.frameVal < u.endVal ? u.endVal : u.frameVal : u.frameVal = u.frameVal > u.endVal ? u.endVal : u.frameVal, u.frameVal = Math.round(u.frameVal * u.dec) / u.dec, u.printValue(u.frameVal), t < u.duration ? u.rAF = requestAnimationFrame(u.count) : u.callback && u.callback() }, u.start = function (e) { return u.callback = e, u.rAF = requestAnimationFrame(u.count), !1 }, u.pauseResume = function () { u.paused ? (u.paused = !1, delete u.startTime, u.duration = u.remaining, u.startVal = u.frameVal, requestAnimationFrame(u.count)) : (u.paused = !0, cancelAnimationFrame(u.rAF)) }, u.reset = function () { u.paused = !1, delete u.startTime, u.startVal = t, cancelAnimationFrame(u.rAF), u.printValue(u.startVal) }, u.update = function (e) { cancelAnimationFrame(u.rAF), u.paused = !1, delete u.startTime, u.startVal = u.frameVal, u.endVal = Number(e), u.countDown = u.startVal > u.endVal, u.rAF = requestAnimationFrame(u.count) }, u.printValue(u.startVal) } }); new CountUp("sixtyFive", 0, 65).start(); new CountUp("ninetyOne", 0, 91).start(); new CountUp("twenty", 0, 20).start(); new CountUp("eightyFive", 0, 85).start();